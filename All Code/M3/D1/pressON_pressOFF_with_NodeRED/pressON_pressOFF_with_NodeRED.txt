[
    {
        "id": "3097a32facf3a051",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db981b55646d9ffb",
        "type": "rpi-gpio in",
        "z": "3097a32facf3a051",
        "name": "",
        "pin": "16",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "41e9014129df1975"
            ]
        ]
    },
    {
        "id": "f90b2f22b6f83a90",
        "type": "rpi-gpio out",
        "z": "3097a32facf3a051",
        "name": "",
        "pin": "12",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "41e9014129df1975",
        "type": "function",
        "z": "3097a32facf3a051",
        "name": "function 1",
        "func": "context.state = context.state | 0;\ncontext.state = !context.state\nvar myContext = context.state;\n// initialise the counter to 0 if it doesnâ€™t exist already\nvar count = context.get('count') || 0;\ncount += 1;\n// store the value back\ncontext.set('count', count);\n// make it part of the outgoing msg object\nmsg.count = count;\n//define function isOdd 1 === isOdd\nfunction isOdd(num) { return num % 2; }\n/if myContext is true and count is odd send 1,else send 0/\nif (myContext === true && isOdd((count + 1) / 2) === 1) {\n    msg.payload = 1;\n    return msg;\n} else if (myContext === true && isOdd((count + 1) / 2) === 0) {\n    msg.payload = 0;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            [
                "f90b2f22b6f83a90"
            ]
        ]
    }
]